name: Web CD

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - web/**

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Create .env file
        run: |
          cat > .env << EOF
          DOCKER_REGISTRY=${{ secrets.DOCKER_REGISTRY }}
          EOF

      - name: 🔑 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🚀 Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./web
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/chart-pattern:nginx-latest
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: self-hosted
    timeout-minutes: 60
    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Create .env file
        run: |
          cat > .env << EOF
          DOCKER_REGISTRY=${{ secrets.DOCKER_REGISTRY }}
          MYSQL_USER=${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
          MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_HOST=${{ secrets.MYSQL_HOST }}
          MYSQL_PORT=${{ secrets.MYSQL_PORT }}
          MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}
          EOF

      - name: 🚀 Deploy
        run: |
          docker compose up -d nginx
          docker rmi ${{ secrets.DOCKER_REGISTRY }}/chart-pattern:nginx-latest

      - name: ✅ Health Check
        run: |
          echo "Verifying deployment..."
          docker compose ps nginx

          CONTAINER_ID=$(docker compose ps nginx --status running --quiet)

          if [ -n "$CONTAINER_ID" ]; then
            echo "✅ Nginx container is running successfully"
          else
            echo "❌ Nginx container is not running"
            exit 1
          fi