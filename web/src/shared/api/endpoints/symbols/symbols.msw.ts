/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Chart Pattern API
 * 차트 패턴 매칭을 위한 API 서버
 * OpenAPI spec version: 1.0.0
 */
import { faker } from '@faker-js/faker';

import { http, HttpResponse, delay } from 'msw';

import type { Symbols } from '../../models';

export const getSymbolsResponseMock = (overrideResponse: Partial<Symbols> = {}): Symbols => ({
  symbols: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() =>
    faker.string.alpha(20)
  ),
  ...overrideResponse,
});

export const getSymbolsMockHandler = (
  overrideResponse?: Symbols | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<Symbols> | Symbols)
) => {
  return http.get('*/v1/symbols', async info => {
    await delay(1000);

    return new HttpResponse(
      JSON.stringify(
        overrideResponse !== undefined
          ? typeof overrideResponse === 'function'
            ? await overrideResponse(info)
            : overrideResponse
          : getSymbolsResponseMock()
      ),
      { status: 200, headers: { 'Content-Type': 'application/json' } }
    );
  });
};
export const getSymbolsMock = () => [getSymbolsMockHandler()];
